package com.hluther.parser;
import java_cup.runtime.*;
import com.hluther.gui.Konquest;
import com.hluther.lexer.MapConfigFileLexer;
import com.hluther.drivers.MapConfigFile;

parser code {:

    private Konquest konquestFrame;
    private MapConfigFile mapConfigFileDriver;
  
    public MapConfigFileParser(MapConfigFileLexer lexer, Konquest konquestFrame) { 
        super(lexer);
        this.konquestFrame = konquestFrame;
        mapConfigFileDriver = this.konquestFrame.getMapConfigFile();
    }

    public void syntax_error(Symbol s){
        System.out.println("Error " + s);
        konquestFrame.printMapConfigFileSintaxError(s);
    }

    public void unrecovered_syntax_error(Symbol s){
        System.out.println("Error grave " + s);
        konquestFrame.printMapConfigFileSintaxError(s);
    } 

:}

/* Terminals */
terminal String NAMEID, NAMEPLANET, NAMEPLAYER, CURLYBRACKETO, CURLYBRACKETC, SQUAREBRACKETO, SQUAREBRACKETC, COLON, COMMA, MAP, ID, SIZE, ROWS, COLUMNS, RANDOM, NEUTRALP, BLIND, ACCUMULATE, INTEGER,
                NEUTRAL, SHOWSPACESHIPS, SHOWSTATISTICS, PRODUCTION, COMPLETION, PLANETS, SPACESHIPS, DEATHRATE, NEUTRALPLANETS, PLAYERS, PLAYERPLANETS, TYPE, HUMAN, EASY, HARD, NAME, TRUE, FALSE, DOUBLE;

/* Non-terminals */
non terminal    konquest, players, playerRulesSelector, playersDescription, planets, planetsDescription, planetRulesSelector, neutralPlanets, neutralPlanetsDescription, neutralPlanetRulesSelector, map, mapRulesSelector,
                id, size, neutralPlanetsMap, neutral, random, blindMap, accumulate, completion, konquestRulesSelector, mapName, sizeRulesSelector, rows, columns, neutralRulesSelector, showSpaceShips, showStatistics, production, boolean;
non terminal String     planetName, playerName, playerType, playerPlanets, planetsName, type, name;
non terminal Integer    planetSpaceShips, planetProduction;
non terminal Double     planetDeathRate;

/* The grammar */
start with konquest;

/*-------------------------------------------------------ESTRUCTURA GENERAL KONQUEST-------------------------------------------------------*/

konquest::=     CURLYBRACKETO konquestRulesSelector CURLYBRACKETC
                ;

konquestRulesSelector::=    map COMMA planets COMMA neutralPlanets COMMA players
                            | planets COMMA map COMMA neutralPlanets COMMA players
                            | planets COMMA neutralPlanets COMMA map COMMA players
                            | planets COMMA neutralPlanets COMMA players COMMA map
                            | map COMMA planets COMMA players COMMA neutralPlanets
                            | planets COMMA map COMMA players COMMA neutralPlanets
                            | planets COMMA players COMMA map COMMA neutralPlanets
                            | planets COMMA players COMMA neutralPlanets COMMA map
                            | map COMMA neutralPlanets COMMA planets COMMA players
                            | neutralPlanets COMMA map COMMA planets COMMA players
                            | neutralPlanets COMMA planets COMMA map COMMA players
                            | neutralPlanets COMMA planets COMMA players COMMA map
                            | map COMMA neutralPlanets COMMA players COMMA planets
                            | neutralPlanets COMMA map COMMA players COMMA planets
                            | neutralPlanets COMMA players COMMA map COMMA planets
                            | neutralPlanets COMMA players COMMA planets COMMA map
                            | map COMMA players COMMA planets COMMA neutralPlanets
                            | players COMMA map COMMA planets COMMA neutralPlanets
                            | players COMMA planets COMMA map COMMA neutralPlanets
                            | players COMMA planets COMMA neutralPlanets COMMA map
                            | map COMMA players COMMA neutralPlanets COMMA planets
                            | players COMMA map COMMA neutralPlanets COMMA planets
                            | players COMMA neutralPlanets COMMA map COMMA planets
                            | players COMMA neutralPlanets COMMA planets COMMA map
                            ;    

/*-------------------------------------------------------ESTRUCTURA MAPA-------------------------------------------------------*/

map::=  MAP COLON CURLYBRACKETO mapRulesSelector CURLYBRACKETC {:mapConfigFileDriver.createMap();:} 
        ;
    
mapRulesSelector::=     id
                        | size
                        | neutral
                        | random
                        | neutralPlanetsMap
                        | blindMap
                        | accumulate
                        | completion
                        | id COMMA mapRulesSelector
                        | size COMMA mapRulesSelector
                        | neutral COMMA mapRulesSelector
                        | random COMMA mapRulesSelector
                        | neutralPlanetsMap COMMA mapRulesSelector
                        | blindMap COMMA mapRulesSelector
                        | accumulate COMMA mapRulesSelector
                        | completion COMMA mapRulesSelector
                        ;

//------------------------------------------------------------------------------          
id::=   ID COLON mapName:name {:mapConfigFileDriver.createMapData("id", name.toString());:}
        ;

mapName::=  NAMEID:name {:RESULT = name.replace("\"", "");:}
            | NAMEPLANET:name {:RESULT = name.replace("\"", "");:}
            | NAMEPLAYER:name {:RESULT = name.replace("\"", "");:}
            ; 

//------------------------------------------------------------------------------
size::=     SIZE COLON CURLYBRACKETO sizeRulesSelector CURLYBRACKETC
            ;

sizeRulesSelector::=    rows COMMA columns
                        | columns COMMA rows
                        ;

rows::=     ROWS COLON INTEGER:amount {:mapConfigFileDriver.createMapData("rows", amount.toString());:}
            ;

columns::=   COLUMNS COLON INTEGER:amount {:mapConfigFileDriver.createMapData("columns", amount.toString());:}
            ;

//------------------------------------------------------------------------------
neutral::=   NEUTRAL COLON CURLYBRACKETO neutralRulesSelector CURLYBRACKETC
                        ;

neutralRulesSelector::=     showSpaceShips COMMA showStatistics COMMA production
                            | showSpaceShips COMMA production COMMA showStatistics
                            | showStatistics COMMA showSpaceShips COMMA production
                            | showStatistics COMMA production COMMA showSpaceShips
                            | production COMMA showSpaceShips COMMA showStatistics 
                            | production COMMA showStatistics COMMA showSpaceShips
                            ;

showSpaceShips::=   SHOWSPACESHIPS COLON boolean:value {:mapConfigFileDriver.createMapData("showSpaceShips", value.toString());:}
                    ;

showStatistics::=   SHOWSTATISTICS COLON boolean:value {:mapConfigFileDriver.createMapData("showStatistics", value.toString());:}
                    ;

production::=   PRODUCTION COLON INTEGER:amount {:mapConfigFileDriver.createMapData("production", amount.toString());:}
                ;

boolean::=     TRUE:value {:RESULT = value;:}
               | FALSE:value {:RESULT = value;:}
               ;

//------------------------------------------------------------------------------

random::=   RANDOM COLON boolean:value {:mapConfigFileDriver.createMapData("random", value.toString());:}
            ;

neutralPlanetsMap::=    NEUTRALP COLON INTEGER:amount {:mapConfigFileDriver.createMapData("neutralPlanets", amount.toString());:}
                        ;

blindMap::=     BLIND COLON boolean:value {:mapConfigFileDriver.createMapData("blindMap", value.toString());:}
                ;

accumulate::=   ACCUMULATE COLON boolean:value {:mapConfigFileDriver.createMapData("accumulate", value.toString());:}
                ;

completion::=   COMPLETION COLON INTEGER:amount {:mapConfigFileDriver.createMapData("completion", amount.toString());:}
                ;  


/*-------------------------------------------------------ESTRUCTURA PLANETAS-------------------------------------------------------*/

planets::=     PLANETS COLON SQUAREBRACKETO planetsDescription SQUAREBRACKETC 
               ;

planetsDescription::=  CURLYBRACKETO planetRulesSelector CURLYBRACKETC COMMA planetsDescription
                       | CURLYBRACKETO planetRulesSelector CURLYBRACKETC  
                       ;
 
planetRulesSelector::=      planetName:name COMMA planetProduction:production COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetName:name COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetSpaceShips:ships COMMA planetName:name COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetName:name COMMA planetProduction:production COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetName:name COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetDeathRate:deathRate COMMA planetName:name COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetProduction:production COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetName:name COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetName:name COMMA planetDeathRate:deathRate COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetName:name COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetProduction:production COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetName:name COMMA planetSpaceShips:ships COMMA planetProduction:production COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetName:name COMMA planetProduction:production COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetProduction:production COMMA planetName:name COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetSpaceShips:ships COMMA planetProduction:production COMMA planetDeathRate:deathRate COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetName:name COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetName:name COMMA planetSpaceShips:ships COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetName:name COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetProduction:production COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetName:name COMMA planetDeathRate:deathRate COMMA planetProduction:production COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetName:name COMMA planetProduction:production COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetProduction:production COMMA planetName:name COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            | planetDeathRate:deathRate COMMA planetProduction:production COMMA planetSpaceShips:ships COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, false, false);:}
                            ;

planetName::=   NAME COLON NAMEPLANET:name {:RESULT = name.replace("\"", "");:}
                ;

planetSpaceShips::=     SPACESHIPS COLON INTEGER:amount {:RESULT = Integer.parseInt(amount);:}
                        ;

planetProduction::=     PRODUCTION COLON INTEGER:amount {:RESULT = Integer.parseInt(amount);:}
                        ;

planetDeathRate::=      DEATHRATE COLON DOUBLE:amount {:RESULT = Double.parseDouble(amount);:}
                        ;

/*-------------------------------------------------------ESTRUCTURA PLANETAS_NEUTRALES-------------------------------------------------------*/

neutralPlanets::=   NEUTRALPLANETS COLON SQUAREBRACKETO neutralPlanetsDescription SQUAREBRACKETC 
                    ;

neutralPlanetsDescription::=    CURLYBRACKETO neutralPlanetRulesSelector CURLYBRACKETC COMMA neutralPlanetsDescription
                                | CURLYBRACKETO neutralPlanetRulesSelector CURLYBRACKETC
                                | error:e CURLYBRACKETC COMMA neutralPlanetsDescription {:syntax_error((Symbol)e);:}
                                ;

neutralPlanetRulesSelector::=   planetName:name COMMA planetProduction:production COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetName:name COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetSpaceShips:ships COMMA planetName:name COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetProduction:production COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetName:name COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetDeathRate:deathRate COMMA planetName:name COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetProduction:production COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetName:name COMMA planetDeathRate:deathRate COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetName:name COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetProduction:production COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetSpaceShips:ships COMMA planetProduction:production COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetName:name COMMA planetProduction:production COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetProduction:production COMMA planetName:name COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetSpaceShips:ships COMMA planetProduction:production COMMA planetDeathRate:deathRate COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetName:name COMMA planetSpaceShips:ships COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetName:name COMMA planetProduction:production {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetProduction:production COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetDeathRate:deathRate COMMA planetProduction:production COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetName:name COMMA planetProduction:production COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetProduction:production COMMA planetName:name COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetDeathRate:deathRate COMMA planetProduction:production COMMA planetSpaceShips:ships COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, production, deathRate, true, false);:}
                                | planetName:name COMMA planetSpaceShips:ships COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                | planetName:name COMMA planetDeathRate:deathRate COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                | planetSpaceShips:ships COMMA planetName:name COMMA planetDeathRate:deathRate {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                | planetSpaceShips:ships COMMA planetDeathRate:deathRate COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                | planetDeathRate:deathRate COMMA planetName:name COMMA planetSpaceShips:ships {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                | planetDeathRate:deathRate COMMA planetSpaceShips:ships COMMA planetName:name {:mapConfigFileDriver.createPlanet(name, ships, -1, deathRate, true, true);:}
                                ;

/*-------------------------------------------------------ESTRUCTURA JUGADORES-------------------------------------------------------*/

players::=     PLAYERS COLON SQUAREBRACKETO playersDescription SQUAREBRACKETC
               | error:e COMMA {:syntax_error((Symbol)e);:}
               ;

playersDescription::=   CURLYBRACKETO playerRulesSelector CURLYBRACKETC COMMA playersDescription
                        | CURLYBRACKETO playerRulesSelector CURLYBRACKETC
                        | error:e CURLYBRACKETC COMMA playersDescription {:syntax_error((Symbol)e);:}
                        | error:e SQUAREBRACKETC {:syntax_error((Symbol)e);:}
                        | error:e HARD {:syntax_error((Symbol)e);:}
                        | error:e EASY {:syntax_error((Symbol)e);:}
                        | error:e HUMAN {:syntax_error((Symbol)e);:}
                        | error:e NAMEPLANET {:syntax_error((Symbol)e);:}
                        | error:e NAMEPLAYER {:syntax_error((Symbol)e);:}
                        ;

playerRulesSelector::=    playerPlanets:planets COMMA playerName:name COMMA playerType:type {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          | playerPlanets:planets COMMA playerType:type COMMA playerName:name {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          | playerName:name COMMA playerPlanets:planets COMMA playerType:type {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          | playerName:name COMMA playerType:type COMMA playerPlanets:planets {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          | playerType:type COMMA playerName:name COMMA playerPlanets:planets {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          | playerType:type COMMA playerPlanets:planets COMMA playerName:name {:mapConfigFileDriver.createPlayer(name, planets, type);:}
                          ;

playerName::=   NAME COLON name:name {:RESULT = name;:}
                ;

name::=     NAMEPLANET:name {:RESULT = name.replace("\"", "");:}
            | NAMEPLAYER:name {:RESULT = name.replace("\"", "");:}
            ;

playerPlanets::=   PLAYERPLANETS COLON SQUAREBRACKETO planetsName:planets {:RESULT = planets;:} SQUAREBRACKETC
                   ;

planetsName::=   NAMEPLANET:planet COMMA planetsName:planets {:RESULT = planet.replace("\"", "") +"|"+planets;:}
                | NAMEPLANET:planet {:RESULT = planet.replace("\"", "");:}
                ;

playerType::=   TYPE COLON type:type {:RESULT = type;:}
                ;

type::=     HUMAN:type {:RESULT = type;:}
            | EASY:type {:RESULT = type;:}
            | HARD:type {:RESULT = type;:}
            ;
