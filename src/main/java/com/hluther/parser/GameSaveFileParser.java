
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.hluther.parser;

import java_cup.runtime.*;
import com.hluther.gui.Konquest;
import com.hluther.lexer.GameSaveFileLexer;
import com.hluther.drivers.GameSaveFile;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class GameSaveFileParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return GameSaveFileSym.class;
}

  /** Default constructor. */
  @Deprecated
  public GameSaveFileParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public GameSaveFileParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public GameSaveFileParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\075\000\002\002\004\000\002\002\015\000\002\002" +
    "\013\000\002\002\013\000\002\002\011\000\002\003\033" +
    "\000\002\003\031\000\002\024\005\000\002\025\005\000" +
    "\002\043\005\000\002\044\005\000\002\045\003\000\002" +
    "\045\003\000\002\046\005\000\002\047\005\000\002\026" +
    "\005\000\002\004\007\000\002\005\025\000\002\005\023" +
    "\000\002\021\005\000\002\022\005\000\002\031\005\000" +
    "\002\032\005\000\002\051\005\000\002\050\005\000\002" +
    "\027\005\000\002\030\005\000\002\006\007\000\002\007" +
    "\007\000\002\010\013\000\002\010\011\000\002\013\005" +
    "\000\002\014\003\000\002\014\003\000\002\015\005\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\017\005\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\020\003" +
    "\000\002\020\003\000\002\020\003\000\002\020\003\000" +
    "\002\020\003\000\002\011\007\000\002\012\025\000\002" +
    "\012\023\000\002\033\004\000\002\034\004\000\002\035" +
    "\004\000\002\036\004\000\002\037\004\000\002\040\004" +
    "\000\002\041\004\000\002\023\005\000\002\042\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\313\000\004\006\005\001\002\000\004\002\315\001" +
    "\002\000\004\014\006\001\002\000\004\012\237\001\002" +
    "\000\004\013\010\001\002\000\004\036\011\001\002\000" +
    "\004\012\233\001\002\000\004\013\013\001\002\000\006" +
    "\041\014\042\015\001\002\000\004\012\152\001\002\000" +
    "\004\012\107\001\002\000\004\013\101\001\002\000\006" +
    "\007\021\013\020\001\002\000\004\034\023\001\002\000" +
    "\004\002\ufffd\001\002\000\004\007\100\001\002\000\004" +
    "\012\024\001\002\000\004\010\025\001\002\000\004\006" +
    "\027\001\002\000\004\011\077\001\002\000\004\031\030" +
    "\001\002\000\004\012\047\001\002\000\004\013\032\001" +
    "\002\000\004\032\033\001\002\000\004\012\047\001\002" +
    "\000\004\013\035\001\002\000\004\033\036\001\002\000" +
    "\004\012\047\001\002\000\004\013\040\001\002\000\004" +
    "\070\041\001\002\000\004\012\047\001\002\000\004\013" +
    "\043\001\002\000\004\071\045\001\002\000\004\013\051" +
    "\001\002\000\004\012\047\001\002\000\004\013\uffc9\001" +
    "\002\000\004\030\050\001\002\000\004\013\uffc5\001\002" +
    "\000\004\072\052\001\002\000\004\012\047\001\002\000" +
    "\004\013\054\001\002\000\004\037\055\001\002\000\004" +
    "\012\047\001\002\000\004\013\057\001\002\000\004\047" +
    "\060\001\002\000\004\012\065\001\002\000\004\007\062" +
    "\001\002\000\006\011\uffce\013\063\001\002\000\004\006" +
    "\027\001\002\000\004\011\uffcf\001\002\000\006\004\070" +
    "\005\066\001\002\000\006\007\uffe0\013\uffe0\001\002\000" +
    "\004\007\uffc6\001\002\000\006\007\uffe1\013\uffe1\001\002" +
    "\000\004\013\uffc7\001\002\000\004\013\uffc8\001\002\000" +
    "\004\013\uffca\001\002\000\004\013\uffcb\001\002\000\004" +
    "\013\uffcc\001\002\000\004\013\uffcd\001\002\000\004\007" +
    "\uffd0\001\002\000\004\002\uffff\001\002\000\004\042\015" +
    "\001\002\000\006\007\104\013\103\001\002\000\004\034" +
    "\023\001\002\000\004\002\ufffe\001\002\000\004\007\106" +
    "\001\002\000\004\002\000\001\002\000\004\010\110\001" +
    "\002\000\004\006\112\001\002\000\004\011\151\001\002" +
    "\000\004\047\114\001\002\000\004\013\117\001\002\000" +
    "\004\012\115\001\002\000\006\004\070\005\066\001\002" +
    "\000\004\013\uffe2\001\002\000\004\043\121\001\002\000" +
    "\004\013\127\001\002\000\004\012\122\001\002\000\010" +
    "\044\126\045\124\046\123\001\002\000\004\013\uffdc\001" +
    "\002\000\004\013\uffdd\001\002\000\004\013\uffdf\001\002" +
    "\000\004\013\uffde\001\002\000\004\052\130\001\002\000" +
    "\004\012\135\001\002\000\004\007\132\001\002\000\006" +
    "\011\uffe3\013\133\001\002\000\004\006\112\001\002\000" +
    "\004\011\uffe4\001\002\000\026\053\144\054\145\055\136" +
    "\056\147\057\142\060\146\061\150\062\143\063\137\064" +
    "\140\001\002\000\004\007\uffd8\001\002\000\004\007\uffd2" +
    "\001\002\000\004\007\uffd1\001\002\000\004\007\uffdb\001" +
    "\002\000\004\007\uffd6\001\002\000\004\007\uffd3\001\002" +
    "\000\004\007\uffda\001\002\000\004\007\uffd9\001\002\000" +
    "\004\007\uffd5\001\002\000\004\007\uffd7\001\002\000\004" +
    "\007\uffd4\001\002\000\006\007\uffe5\013\uffe5\001\002\000" +
    "\004\010\153\001\002\000\004\006\155\001\002\000\004" +
    "\011\232\001\002\000\004\047\156\001\002\000\004\012" +
    "\230\001\002\000\004\013\160\001\002\000\004\050\161" +
    "\001\002\000\004\012\226\001\002\000\004\013\163\001" +
    "\002\000\004\037\164\001\002\000\004\012\224\001\002" +
    "\000\004\013\166\001\002\000\004\023\167\001\002\000" +
    "\004\012\222\001\002\000\004\013\171\001\002\000\004" +
    "\040\173\001\002\000\004\013\176\001\002\000\004\012" +
    "\174\001\002\000\004\067\175\001\002\000\004\013\uffea" +
    "\001\002\000\004\051\200\001\002\000\004\013\205\001" +
    "\002\000\004\012\201\001\002\000\006\065\203\066\204" +
    "\001\002\000\004\013\uffe9\001\002\000\006\007\ufff6\013" +
    "\ufff6\001\002\000\006\007\ufff5\013\ufff5\001\002\000\004" +
    "\026\207\001\002\000\004\013\212\001\002\000\004\012" +
    "\210\001\002\000\004\030\211\001\002\000\004\013\uffe8" +
    "\001\002\000\004\027\213\001\002\000\004\012\220\001" +
    "\002\000\004\007\215\001\002\000\006\011\uffef\013\216" +
    "\001\002\000\004\006\155\001\002\000\004\011\ufff0\001" +
    "\002\000\004\030\221\001\002\000\004\007\uffe7\001\002" +
    "\000\004\030\223\001\002\000\004\013\uffeb\001\002\000" +
    "\004\030\225\001\002\000\004\013\uffec\001\002\000\006" +
    "\004\070\005\066\001\002\000\004\013\uffed\001\002\000" +
    "\004\004\231\001\002\000\004\013\uffee\001\002\000\004" +
    "\013\uffe6\001\002\000\004\010\234\001\002\000\004\006" +
    "\155\001\002\000\004\011\236\001\002\000\004\013\ufff1" +
    "\001\002\000\004\006\240\001\002\000\004\015\241\001" +
    "\002\000\004\012\242\001\002\000\004\006\243\001\002" +
    "\000\004\024\244\001\002\000\004\012\313\001\002\000" +
    "\004\013\246\001\002\000\004\025\250\001\002\000\004" +
    "\007\253\001\002\000\004\012\251\001\002\000\004\030" +
    "\252\001\002\000\004\007\ufff9\001\002\000\004\013\254" +
    "\001\002\000\004\016\256\001\002\000\004\013\261\001" +
    "\002\000\004\012\257\001\002\000\006\065\203\066\204" +
    "\001\002\000\004\013\ufff4\001\002\000\004\017\263\001" +
    "\002\000\004\013\266\001\002\000\004\012\264\001\002" +
    "\000\006\065\203\066\204\001\002\000\004\013\ufff3\001" +
    "\002\000\004\020\267\001\002\000\004\012\270\001\002" +
    "\000\004\006\271\001\002\000\004\021\273\001\002\000" +
    "\004\013\276\001\002\000\004\012\274\001\002\000\006" +
    "\065\203\066\204\001\002\000\004\013\ufff8\001\002\000" +
    "\004\022\277\001\002\000\004\012\311\001\002\000\004" +
    "\007\301\001\002\000\006\007\303\013\302\001\002\000" +
    "\004\035\305\001\002\000\004\013\ufffb\001\002\000\004" +
    "\007\310\001\002\000\004\012\306\001\002\000\004\030" +
    "\307\001\002\000\004\007\ufff2\001\002\000\004\013\ufffc" +
    "\001\002\000\006\065\203\066\204\001\002\000\004\007" +
    "\ufff7\001\002\000\004\030\314\001\002\000\004\013\ufffa" +
    "\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\313\000\004\002\003\001\001\000\002\001\001\000" +
    "\004\003\006\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\004\011\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\015\007\016\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\011\021\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\012\025\001" +
    "\001\000\002\001\001\000\004\033\030\001\001\000\004" +
    "\042\075\001\001\000\002\001\001\000\004\034\033\001" +
    "\001\000\004\042\074\001\001\000\002\001\001\000\004" +
    "\035\036\001\001\000\004\042\073\001\001\000\002\001" +
    "\001\000\004\036\041\001\001\000\004\042\072\001\001" +
    "\000\002\001\001\000\004\037\043\001\001\000\002\001" +
    "\001\000\004\042\045\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\040\052\001\001\000" +
    "\004\042\071\001\001\000\002\001\001\000\004\041\055" +
    "\001\001\000\004\042\070\001\001\000\002\001\001\000" +
    "\004\023\060\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\012\063\001\001\000\002\001" +
    "\001\000\004\014\066\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\101\001\001\000\002\001\001\000\004\011\104" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\110\001\001\000\002" +
    "\001\001\000\004\013\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\014\115\001\001\000\002\001\001" +
    "\000\004\015\117\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\124\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\017" +
    "\130\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\133\001\001\000\002\001\001\000" +
    "\004\020\140\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\005\153\001\001\000\002" +
    "\001\001\000\004\021\156\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\022\161\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\031\164\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\032\167\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\051\171\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\050\176\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\045\201\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\205\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\030\213\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\216" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\014\226\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\005\234\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\244\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\025\246" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\046\254" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\045" +
    "\257\001\001\000\002\001\001\000\004\047\261\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\264\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\043\271\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\045\274\001\001\000\002" +
    "\001\001\000\004\044\277\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\303\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\045\311\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$GameSaveFileParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$GameSaveFileParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$GameSaveFileParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    private Konquest konquestFrame;
    private GameSaveFile gameSaveFileDriver;
  
    public GameSaveFileParser(GameSaveFileLexer lexer, Konquest konquestFrame) { 
        super(lexer);
        this.konquestFrame = konquestFrame;
        this.gameSaveFileDriver = konquestFrame.getGameSaveFileDriver();
    }

    public void syntax_error(Symbol s){
        System.out.println("Error " + s);
        konquestFrame.printGameSaveSintaxError(s);
    }

    public void unrecovered_syntax_error(Symbol s){
        System.out.println("Error grave " + s);
        konquestFrame.printGameSaveSintaxError(s);
    } 



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$GameSaveFileParser$actions {
  private final GameSaveFileParser parser;

  /** Constructor */
  CUP$GameSaveFileParser$actions(GameSaveFileParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$GameSaveFileParser$do_action_part00000000(
    int                        CUP$GameSaveFileParser$act_num,
    java_cup.runtime.lr_parser CUP$GameSaveFileParser$parser,
    java.util.Stack            CUP$GameSaveFileParser$stack,
    int                        CUP$GameSaveFileParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$GameSaveFileParser$result;

      /* select the action based on the action number */
      switch (CUP$GameSaveFileParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= konquest EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).value;
		RESULT = start_val;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$GameSaveFileParser$parser.done_parsing();
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // konquest ::= CURLYBRACKETO map COMMA planets COMMA neutralPlanets COMMA players COMMA sendings CURLYBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("konquest",0, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-10)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // konquest ::= CURLYBRACKETO map COMMA planets COMMA players COMMA sendings CURLYBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("konquest",0, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-8)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // konquest ::= CURLYBRACKETO map COMMA planets COMMA neutralPlanets COMMA players CURLYBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("konquest",0, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-8)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // konquest ::= CURLYBRACKETO map COMMA planets COMMA players CURLYBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("konquest",0, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-6)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // map ::= MAP COLON CURLYBRACKETO SIZE COLON CURLYBRACKETO rows COMMA columns CURLYBRACKETC COMMA blindMap COMMA accumulate COMMA NEUTRAL COLON CURLYBRACKETO showSpaceShips COMMA showStatistics CURLYBRACKETC COMMA completion CURLYBRACKETC 
            {
              Object RESULT =null;
		int rowsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-18)).left;
		int rowsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-18)).right;
		Integer rows = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-18)).value;
		int columnsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).left;
		int columnsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).right;
		Integer columns = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).value;
		int blindMapleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).left;
		int blindMapright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).right;
		Boolean blindMap = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).value;
		int accumulateleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int accumulateright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Boolean accumulate = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int showSpaceShipsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-6)).left;
		int showSpaceShipsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-6)).right;
		Boolean showSpaceShips = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-6)).value;
		int showStatisticsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).left;
		int showStatisticsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).right;
		Boolean showStatistics = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).value;
		int completionleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).left;
		int completionright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).right;
		Integer completion = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).value;
		gameSaveFileDriver.createMap(rows, columns, blindMap, accumulate, showSpaceShips, showStatistics, completion);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("map",1, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-24)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // map ::= MAP COLON CURLYBRACKETO SIZE COLON CURLYBRACKETO rows COMMA columns CURLYBRACKETC COMMA blindMap COMMA accumulate COMMA NEUTRAL COLON CURLYBRACKETO showSpaceShips COMMA showStatistics CURLYBRACKETC CURLYBRACKETC 
            {
              Object RESULT =null;
		int rowsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).left;
		int rowsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).right;
		Integer rows = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)).value;
		int columnsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-14)).left;
		int columnsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-14)).right;
		Integer columns = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-14)).value;
		int blindMapleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int blindMapright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Boolean blindMap = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int accumulateleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).left;
		int accumulateright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).right;
		Boolean accumulate = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).value;
		int showSpaceShipsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).left;
		int showSpaceShipsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).right;
		Boolean showSpaceShips = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)).value;
		int showStatisticsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)).left;
		int showStatisticsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)).right;
		Boolean showStatistics = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)).value;
		gameSaveFileDriver.createMap(rows, columns, blindMap, accumulate, showSpaceShips, showStatistics, -1);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("map",1, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-22)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // rows ::= ROWS COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("rows",18, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // columns ::= COLUMNS COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("columns",19, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // showSpaceShips ::= SHOWSPACESHIPS COLON boolean 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Boolean value = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = value;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("showSpaceShips",33, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // showStatistics ::= SHOWSTATISTICS COLON boolean 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Boolean value = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = value;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("showStatistics",34, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // boolean ::= TRUE 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Boolean.valueOf(value);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("boolean",35, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // boolean ::= FALSE 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String value = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Boolean.valueOf(value);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("boolean",35, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // blindMap ::= BLIND COLON boolean 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Boolean value = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = value;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("blindMap",36, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // accumulate ::= ACCUMULATE COLON boolean 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Boolean value = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = value;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("accumulate",37, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // completion ::= COMPLETION COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("completion",20, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // planets ::= PLANETS COLON SQUAREBRACKETO planetsDescription SQUAREBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planets",2, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // planetsDescription ::= CURLYBRACKETO planetName COMMA planetOwner COMMA planetSpaceShips COMMA planetProduction COMMA planetDeathRate COMMA planetType COMMA planetRow COMMA planetColumn CURLYBRACKETC COMMA planetsDescription 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).value;
		int ownerleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).left;
		int ownerright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).right;
		String owner = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).value;
		int spaceShipsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).left;
		int spaceShipsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).right;
		Integer spaceShips = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).value;
		int productionleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int productionright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Integer production = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int deathRateleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).left;
		int deathRateright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).right;
		Double deathRate = (Double)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).right;
		Boolean type = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).value;
		int rowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int rowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		Integer row = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int columnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int columnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		Integer column = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		gameSaveFileDriver.createPlanet(name, owner, spaceShips, production, deathRate, type, row, column);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetsDescription",3, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-18)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // planetsDescription ::= CURLYBRACKETO planetName COMMA planetOwner COMMA planetSpaceShips COMMA planetProduction COMMA planetDeathRate COMMA planetType COMMA planetRow COMMA planetColumn CURLYBRACKETC 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).value;
		int ownerleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).left;
		int ownerright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).right;
		String owner = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).value;
		int spaceShipsleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int spaceShipsright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Integer spaceShips = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int productionleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).left;
		int productionright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).right;
		Integer production = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).value;
		int deathRateleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).left;
		int deathRateright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).right;
		Double deathRate = (Double)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		Boolean type = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int rowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int rowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		Integer row = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		int columnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).left;
		int columnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).right;
		Integer column = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).value;
		gameSaveFileDriver.createPlanet(name, owner, spaceShips, production, deathRate, type, row, column);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetsDescription",3, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // planetName ::= NAME COLON NAMEPLANET 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = name.replace("\"", "");
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetName",15, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // planetOwner ::= OWNER COLON name 
            {
              String RESULT =null;
		int ownerleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int ownerright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String owner = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = owner.replace("\"", "");
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetOwner",16, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // planetSpaceShips ::= SPACESHIPS COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetSpaceShips",23, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // planetProduction ::= PRODUCTION COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetProduction",24, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // planetDeathRate ::= DEATHRATE COLON DOUBLE 
            {
              Double RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Double.parseDouble(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetDeathRate",39, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // planetType ::= NEUTRALTYPE COLON boolean 
            {
              Boolean RESULT =null;
		int valueleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int valueright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Boolean value = (Boolean)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = value;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetType",38, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // planetRow ::= ROW COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetRow",21, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // planetColumn ::= COLUMN COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("planetColumn",22, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // neutralPlanets ::= NEUTRALPLANETS COLON SQUAREBRACKETO planetsDescription SQUAREBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("neutralPlanets",4, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // players ::= PLAYERS COLON SQUAREBRACKETO playersDescription SQUAREBRACKETC 
            {
              Object RESULT =null;
		gameSaveFileDriver.assignPlanets();
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("players",5, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // playersDescription ::= CURLYBRACKETO playerName COMMA playerType COMMA playerColor CURLYBRACKETC COMMA playersDescription 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		gameSaveFileDriver.createPlayer(name, type, color);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("playersDescription",6, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-8)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // playersDescription ::= CURLYBRACKETO playerName COMMA playerType COMMA playerColor CURLYBRACKETC 
            {
              Object RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).value;
		gameSaveFileDriver.createPlayer(name, type, color);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("playersDescription",6, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-6)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // playerName ::= NAME COLON name 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = name;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("playerName",9, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // name ::= NAMEPLANET 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = name.replace("\"", "");
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("name",10, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // name ::= NAMEPLAYER 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = name.replace("\"", "");
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("name",10, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // playerType ::= TYPE COLON type 
            {
              String RESULT =null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = type;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("playerType",11, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // type ::= HUMAN 
            {
              String RESULT =null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = type;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("type",12, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // type ::= EASY 
            {
              String RESULT =null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = type;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("type",12, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // type ::= HARD 
            {
              String RESULT =null;
		int typeleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int typeright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String type = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = type;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("type",12, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // playerColor ::= COLOR COLON color 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("playerColor",13, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // color ::= BLUE 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // color ::= YELLOW 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // color ::= GREEN 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // color ::= RED 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // color ::= ORANGE 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // color ::= LIGHTGRAY 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // color ::= CYAN 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // color ::= DARKGRAY 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // color ::= WHITE 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // color ::= MAGENTA 
            {
              String RESULT =null;
		int colorleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int colorright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String color = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = color;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("color",14, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // sendings ::= SENDINGS COLON SQUAREBRACKETO sendingsDescription SQUAREBRACKETC 
            {
              Object RESULT =null;

              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("sendings",7, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-4)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // sendingsDescription ::= CURLYBRACKETO initialTurn COMMA arrivalTurn COMMA initialRow COMMA initialColumn COMMA targetRow COMMA targetColumn COMMA spaceShipsAmount COMMA attackingPlayer CURLYBRACKETC COMMA sendingsDescription 
            {
              Object RESULT =null;
		int initialTurnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).left;
		int initialTurnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).right;
		Integer initialTurn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-17)).value;
		int arrivalTurnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).left;
		int arrivalTurnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).right;
		Integer arrivalTurn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).value;
		int initialRowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).left;
		int initialRowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).right;
		Integer initialRow = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).value;
		int initialColumnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int initialColumnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Integer initialColumn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int targetRowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).left;
		int targetRowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).right;
		Integer targetRow = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).value;
		int targetColumnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).left;
		int targetColumnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).right;
		Integer targetColumn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).value;
		int spaceShipsAmountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int spaceShipsAmountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		Integer spaceShipsAmount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int attackingPlayerleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int attackingPlayerright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		String attackingPlayer = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		gameSaveFileDriver.createFleet(initialTurn, arrivalTurn, initialRow, initialColumn, targetRow, targetColumn, spaceShipsAmount, attackingPlayer);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("sendingsDescription",8, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-18)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // sendingsDescription ::= CURLYBRACKETO initialTurn COMMA arrivalTurn COMMA initialRow COMMA initialColumn COMMA targetRow COMMA targetColumn COMMA spaceShipsAmount COMMA attackingPlayer CURLYBRACKETC 
            {
              Object RESULT =null;
		int initialTurnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).left;
		int initialTurnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).right;
		Integer initialTurn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-15)).value;
		int arrivalTurnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).left;
		int arrivalTurnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).right;
		Integer arrivalTurn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-13)).value;
		int initialRowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).left;
		int initialRowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).right;
		Integer initialRow = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-11)).value;
		int initialColumnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).left;
		int initialColumnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).right;
		Integer initialColumn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-9)).value;
		int targetRowleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).left;
		int targetRowright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).right;
		Integer targetRow = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-7)).value;
		int targetColumnleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).left;
		int targetColumnright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).right;
		Integer targetColumn = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-5)).value;
		int spaceShipsAmountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).left;
		int spaceShipsAmountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).right;
		Integer spaceShipsAmount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-3)).value;
		int attackingPlayerleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).left;
		int attackingPlayerright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).right;
		String attackingPlayer = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)).value;
		gameSaveFileDriver.createFleet(initialTurn, arrivalTurn, initialRow, initialColumn, targetRow, targetColumn, spaceShipsAmount, attackingPlayer);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("sendingsDescription",8, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-16)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // initialTurn ::= INITIALTURN integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("initialTurn",25, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // arrivalTurn ::= ARRIVALTURN integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("arrivalTurn",26, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // initialRow ::= INITIALROW integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("initialRow",27, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // initialColumn ::= INITIALCOLUMN integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("initialColumn",28, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // targetRow ::= TARGETROW integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("targetRow",29, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // targetColumn ::= TARGETCOLUMN integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("targetColumn",30, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // spaceShipsAmount ::= SPACESHIPS integerValue 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		Integer amount = (Integer)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = amount;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("spaceShipsAmount",31, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // attackingPlayer ::= NAME COLON name 
            {
              String RESULT =null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = name;
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("attackingPlayer",17, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-2)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // integerValue ::= COLON INTEGER 
            {
              Integer RESULT =null;
		int amountleft = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).left;
		int amountright = ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()).right;
		String amount = (String)((java_cup.runtime.Symbol) CUP$GameSaveFileParser$stack.peek()).value;
		RESULT = Integer.parseInt(amount);
              CUP$GameSaveFileParser$result = parser.getSymbolFactory().newSymbol("integerValue",32, ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.elementAt(CUP$GameSaveFileParser$top-1)), ((java_cup.runtime.Symbol)CUP$GameSaveFileParser$stack.peek()), RESULT);
            }
          return CUP$GameSaveFileParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$GameSaveFileParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$GameSaveFileParser$do_action(
    int                        CUP$GameSaveFileParser$act_num,
    java_cup.runtime.lr_parser CUP$GameSaveFileParser$parser,
    java.util.Stack            CUP$GameSaveFileParser$stack,
    int                        CUP$GameSaveFileParser$top)
    throws java.lang.Exception
    {
              return CUP$GameSaveFileParser$do_action_part00000000(
                               CUP$GameSaveFileParser$act_num,
                               CUP$GameSaveFileParser$parser,
                               CUP$GameSaveFileParser$stack,
                               CUP$GameSaveFileParser$top);
    }
}

}
